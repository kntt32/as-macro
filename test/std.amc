import core;
import core.string;
import std.syscall;
import std.alloc;
import std.io;

pub extern fn main();

pub static STD_ALLOC: Alloc;
pub static STD_STDOUT: Io;
pub static STD_STDERR: Io;

pub fn _start() {
    STD_ALLOC.new();
    STD_STDOUT.new(STDOUT);
    STD_STDERR.new(STDERR);

    main();

    STD_STDERR.drop();
    STD_STDOUT.drop();
    STD_ALLOC.drop();
    let status: i32@rdi;
    status = 0;
    exit(status);
};

pub fn panic_handler() {
    static PANICED: [char; 10] = "paniced\n";
    let fd: i32@rdi = STDERR;
    let msg: *char@rsi;
    msg =& PANICED;
    let len_rcx: i64@rcx;
    msg.strlen(len_rcx);
    let len: i64@rdx = len_rcx;
    write(fd, msg, len);
    let code: i32@rdi = -1;
    exit(code);
};


