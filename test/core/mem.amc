import core;

pub as memcpy(in dst: *void@rdi, in src: *void@rsi, in size: i64@rcx) {
    let dst_store: i64@r13 = dst;
    let src_store: i64@r14 = src;
    let size_store: i64@r15 = size;
    let dst: *i8@rdi;
    let src: *i8@rsi;

    cld();

    rep(size);
    movs(dst, src);

    size = size_store;
    src = src_store;
    dst = dst_store;
};

pub as memset(dst: *void@rdi, value: i8@rax, size: i64@rcx) {
    let dst: *i8@rdi;

    cld();

    rep(size);
    stos(dst, value);
};

pub as strlen(s: *char@rsi, len: i64@rcx) {
    let seek_ptr: *i8@rdi;
    seek_ptr = s;

    let null_code: i8@rax;
    null_code = '\0';
    len = -1;

    cld();
    repne(rcx);
    scas(seek_ptr, null_code);
    
    len = seek_ptr;
    sub(len, s);
    dec(len);
};

pub as strcpy(dst: *char@rdi, src: *char@rsi) {
    let len: i64@rcx;
    
    src.strlen(len);
    inc(len);

    memcpy(dst, src, len);
};

