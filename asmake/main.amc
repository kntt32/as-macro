import std;
import std.string;
import core.char;
import parser;

impl Display_Parser(Out);

fn open_file(inout in_object: *In@rdi) {
    let str: Str@stack;
    let optional_in: Option_In@stack;
    optional_in.open(str.from("Asmake.toml"));
    optional_in.take(*in_object);
};

fn main() {
    let in_object: defer In@stack;
    let in_object_ptr: *In@rdi;
    in_object_ptr =& in_object;
    open_file(in_object_ptr);

    let target_string: defer String@stack;
    in_object.read(target_string);

    let target_str: Str@stack;
    target_string.as_str(target_str);

    let path_str: Str@stack;
    path_str.empty();

    let parser: Parser@stack;
    parser.new(target_str, path_str);

    printfln(parser);

    let exist: bool@auto = true;

    do(exist) {
        let index_parser: Parser@stack;
        try parser.parse_index(index_parser, exist);
        printfln(index_parser);
        printfln(parser);
        let str: Str@stack;
        try parser.parse_keyword(str.from("name"), exist);
        try parser.parse_symbol_char('=', exist);
        let string: String@stack;
        try parser.parse_string(string, exist);
        printfln(string);
        string.drop();
    }catch {
        println("catch");
    };

    printfln(parser);
};

